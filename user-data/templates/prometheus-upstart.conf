#!/bin/bash
#
#       /etc/rc.d/init.d/prometheus
#
#       Daemonize the prometheus agent.
#
# chkconfig:   2345 95 20
# description: SSH Infrastructure for clusters and teams
# processname: prometheus
# pidfile: /var/run/prometheus/pidfile

# Source function library.
. /etc/init.d/functions

PROMETHEUS=/usr/local/bin/node_exporter
PID_FILE=/var/run/prometheus/prometheus.pid
LOG_FILE=/var/log/prometheus.log

# Source configuration variables
[ -e /etc/prometheus ] && . /etc/prometheus

#
# Create the /var/run/consul directory, which can live on a tmpfs
# filesystem and be destroyed between reboots.
#
mkrundir() {
        [ ! -d /var/run/prometheus ] && mkdir -p /var/run/prometheus
}

#
# Create a PID file if it doesn't already exist, for clean upgrades
# from previous init-script controlled daemons.
#
KILLPROC_OPT="-p ${PID_FILE}"
mkpidfile() {
        # Create PID file if it didn't exist
        mkrundir
        [ ! -f $PID_FILE ] && pidofproc $CONSUL > $PID_FILE
        if [ $? -ne 0 ] ; then
            rm $PID_FILE
            KILLPROC_OPT=""
        fi
}

start() {
        echo -n "Starting prometheus: "
        mkrundir
        [ -f $PID_FILE ] && rm $PID_FILE
        daemon --pidfile="$PID_FILE" \
            "$PROMETHEUS" >> "$LOG_FILE" &
        retcode=$?
        sleep 1 # Give prometheus a chance to start before writing PID
        PID=$(pgrep prometheus)
        echo $PID >> $PID_FILE
        touch /var/lock/subsys/prometheus
        return $retcode
}

stop() {
        DELAY=5 # seconds maximum to wait for a leave

        echo -n "Shutting down prometheus: "
        mkpidfile

        killproc $KILLPROC_OPT $PROMETHEUS
        retcode=$?

        rm -f /var/lock/subsys/prometheus $PID_FILE
        return $retcode
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p $PID_FILE prometheus
        ;;
    restart)
        stop
        start
        ;;
    reload)
        mkpidfile
        killproc $KILLPROC_OPT $PROMETHEUS -HUP
        ;;
    condrestart)
        [ -f /var/lock/subsys/prometheus ] && restart || :
        ;;
    *)
        echo "Usage: prometheus {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
retcode=$?
echo
exit $retcode
